// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  createdAt         DateTime         @default(now())
  email             String           @unique
  emailVerified     DateTime?
  githubId          String?          @unique
  googleId          String?          @unique
  hashedPassword    String?
  id                String           @id @default(cuid())
  image             String?
  lastname          String?
  linkedinId        String?          @unique
  name              String?
  schemaStructure   SchemaStructure? @relation("UserSchemaStructure")
  schemaStructureId String?          @unique
  sessions          Session[]
  todoistId         String?          @unique
  twitterId         String?          @unique
  updatedAt         DateTime         @updatedAt
}

model SchemaStructure {
  id     String @id @default(cuid())
  schema Json
  user   User   @relation("UserSchemaStructure", fields: [userId], references: [id])
  userId String @unique
}

model Session {
  expires      DateTime
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String   @map("user_id")
}

model VerificationToken {
  expires    DateTime
  identifier String
  token      String   @unique

  @@unique([identifier, token])
}

model Category {
  childId    String?
  id         Int     @id @default(autoincrement())
  link       String
  name       String
  parentId   Int?
  properties Json
  userId     String?
}

model Item {
  categoryId     String? @unique
  id             String  @id @default(cuid())
  itemsSectionId Int?
  properties     Json
  status         String
  title          String
  type           String
  value          Float
}
